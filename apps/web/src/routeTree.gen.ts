/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteRouteImport } from './routes/settings/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users/index'
import { Route as TagsIndexRouteImport } from './routes/tags/index'
import { Route as LinksIndexRouteImport } from './routes/links/index'
import { Route as InstagramIndexRouteImport } from './routes/instagram/index'
import { Route as ImportsIndexRouteImport } from './routes/imports/index'
import { Route as CollectionsIndexRouteImport } from './routes/collections/index'
import { Route as SettingsLinksRouteImport } from './routes/settings/links'
import { Route as SettingsInstagramRouteImport } from './routes/settings/instagram'
import { Route as SettingsAppearanceRouteImport } from './routes/settings/appearance'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'

const SettingsRouteRoute = SettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const TagsIndexRoute = TagsIndexRouteImport.update({
  id: '/tags/',
  path: '/tags/',
  getParentRoute: () => rootRouteImport,
} as any)
const LinksIndexRoute = LinksIndexRouteImport.update({
  id: '/links/',
  path: '/links/',
  getParentRoute: () => rootRouteImport,
} as any)
const InstagramIndexRoute = InstagramIndexRouteImport.update({
  id: '/instagram/',
  path: '/instagram/',
  getParentRoute: () => rootRouteImport,
} as any)
const ImportsIndexRoute = ImportsIndexRouteImport.update({
  id: '/imports/',
  path: '/imports/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsIndexRoute = CollectionsIndexRouteImport.update({
  id: '/collections/',
  path: '/collections/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsLinksRoute = SettingsLinksRouteImport.update({
  id: '/links',
  path: '/links',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsInstagramRoute = SettingsInstagramRouteImport.update({
  id: '/instagram',
  path: '/instagram',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsAppearanceRoute = SettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/instagram': typeof SettingsInstagramRoute
  '/settings/links': typeof SettingsLinksRoute
  '/collections': typeof CollectionsIndexRoute
  '/imports': typeof ImportsIndexRoute
  '/instagram': typeof InstagramIndexRoute
  '/links': typeof LinksIndexRoute
  '/tags': typeof TagsIndexRoute
  '/users': typeof UsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/instagram': typeof SettingsInstagramRoute
  '/settings/links': typeof SettingsLinksRoute
  '/collections': typeof CollectionsIndexRoute
  '/imports': typeof ImportsIndexRoute
  '/instagram': typeof InstagramIndexRoute
  '/links': typeof LinksIndexRoute
  '/tags': typeof TagsIndexRoute
  '/users': typeof UsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/instagram': typeof SettingsInstagramRoute
  '/settings/links': typeof SettingsLinksRoute
  '/collections/': typeof CollectionsIndexRoute
  '/imports/': typeof ImportsIndexRoute
  '/instagram/': typeof InstagramIndexRoute
  '/links/': typeof LinksIndexRoute
  '/tags/': typeof TagsIndexRoute
  '/users/': typeof UsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/appearance'
    | '/settings/instagram'
    | '/settings/links'
    | '/collections'
    | '/imports'
    | '/instagram'
    | '/links'
    | '/tags'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/appearance'
    | '/settings/instagram'
    | '/settings/links'
    | '/collections'
    | '/imports'
    | '/instagram'
    | '/links'
    | '/tags'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/settings/appearance'
    | '/settings/instagram'
    | '/settings/links'
    | '/collections/'
    | '/imports/'
    | '/instagram/'
    | '/links/'
    | '/tags/'
    | '/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  CollectionsIndexRoute: typeof CollectionsIndexRoute
  ImportsIndexRoute: typeof ImportsIndexRoute
  InstagramIndexRoute: typeof InstagramIndexRoute
  LinksIndexRoute: typeof LinksIndexRoute
  TagsIndexRoute: typeof TagsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tags/': {
      id: '/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/links/': {
      id: '/links/'
      path: '/links'
      fullPath: '/links'
      preLoaderRoute: typeof LinksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/instagram/': {
      id: '/instagram/'
      path: '/instagram'
      fullPath: '/instagram'
      preLoaderRoute: typeof InstagramIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/imports/': {
      id: '/imports/'
      path: '/imports'
      fullPath: '/imports'
      preLoaderRoute: typeof ImportsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/': {
      id: '/collections/'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof CollectionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/links': {
      id: '/settings/links'
      path: '/links'
      fullPath: '/settings/links'
      preLoaderRoute: typeof SettingsLinksRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/instagram': {
      id: '/settings/instagram'
      path: '/instagram'
      fullPath: '/settings/instagram'
      preLoaderRoute: typeof SettingsInstagramRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/appearance': {
      id: '/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsAppearanceRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface SettingsRouteRouteChildren {
  SettingsAppearanceRoute: typeof SettingsAppearanceRoute
  SettingsInstagramRoute: typeof SettingsInstagramRoute
  SettingsLinksRoute: typeof SettingsLinksRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsAppearanceRoute: SettingsAppearanceRoute,
  SettingsInstagramRoute: SettingsInstagramRoute,
  SettingsLinksRoute: SettingsLinksRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  CollectionsIndexRoute: CollectionsIndexRoute,
  ImportsIndexRoute: ImportsIndexRoute,
  InstagramIndexRoute: InstagramIndexRoute,
  LinksIndexRoute: LinksIndexRoute,
  TagsIndexRoute: TagsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
